#!/bin/bash
cd $(dirname "${0}")

MOD="${1}"
VERSION="${2}"
if [ -z "${MOD}" ] || [ -z "${VERSION}" ]; then
	echo "Usage: ${0} <mod name> <version>"
	exit
fi

if ! [ -f "./modtools.json" ]; then
	echo modtools.json is missing. For instructions about how to set it up, please visit:
	echo https://github.com/quarantin/pz-modding-tools/blob/main/tools/config/README.md
	exit
fi

MODNAME=$(jq -r ".${MOD}.name" ./modtools.json)
MODREPO=$(jq -r ".${MOD}.repo" ./modtools.json)
if [ "${MODNAME}" = "null" ] || [ "${MODREPO}" = "null" ]; then
	echo "Unknown mod \`${MOD}\`. You might have to add it to modtools.json"
	exit
fi

cd "${MODREPO}"

ZOMBOID="${HOME}/Zomboid"

# Export mod to workshop folder
TARGET="${ZOMBOID}/Workshop/${MOD}/Contents/mods/${MOD}/"
mkdir -p "${TARGET}"
rm -rf "${TARGET}"
git checkout-index -a -f --prefix="${TARGET}"

# Updating version for mod.info
cd "${TARGET}"
sed -i "s/^name=${MODNAME}.*$/name=${MODNAME} (v${VERSION})/" mod.info
find . \( -iname '*.utf8.txt' -or -iname 'README.md' -or -iname 'TODO' \) -delete

# Updating version for workshop.txt
cd "${ZOMBOID}/Workshop/${MOD}"
sed "s/^version=.*$/version=${VERSION}/" "${MODREPO}/workshop.txt" > workshop.txt
sed -i "s/^description=Latest version:.*$/description=Latest version: ${VERSION}/" workshop.txt
